#+TITLE: III.3 - TÉCNICAS DE LINGUAGENS PARA BANCO DE DADOS III com mssqlserver

* Introdução
  O objetivo é usar o sql e seus recursos
  Minha instalação é linux mas vcs podem usar o windows normalmente

* Instalação do mssqlserver no linux
** Fazendo pull da imagem do mssqlserver
  Primeiro você deve fazer o pull da imagem container
  Claro que pra usar o comando docker vc precisa instalar ele
  também. No meu caso estou usando a versão indicada abaixo. 
  Tem muitos tutorials sobre como instalar o docker no google.
  #+name docker version
  #+begin_src sh :dir /sudo::  :eval exports  :results output replace  :exports both
  docker --version
  #+end_src

  #+RESULTS:
  : Docker version 1.12.6, build ae7d637/1.12.6


  Com o docker funcionando, você pode fazer o pull da imagem do
  mssqlserver
  #+name docker pull mssqlserver
  #+begin_src sh  :results output replace  :exports both
  docker pull microsoft/mssql-server-linux:latest
  #+end_src

  #+RESULTS:

** rodando o mssqllserver
   Agora você tem que rodar o container, e depois, checar se o seu container está rodando
  #+name docker ps
  #+begin_src sh :dir /sudo::
  sudo docker ps
  #+end_src

  #+RESULTS:

  Aqui a gente roda nosso container pra obter uma instancia do
  mssqlserver rodando. Repare que o sqlserver tera a disposicao o
  diretorio /sql_scripts onde esta nossos scripts que vamos rodar.
  #+name docker run mssqlserver
  #+begin_src sh :dir /sudo::
    docker run --name mssql-server -v /run/media/wagner/96fea5f1-d297-4f63-a035-abf6511467be/wagnerdocri@gmail.com2/envs/somewritings/mssqlserver/sql_scripts/:/sql_scripts -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=Aluno#123' -p 1433:1433 -d microsoft/mssql-server-linux && docker logs mssql-server  
  #+end_src

  
  Será que nosso container tem mesmo um diretório /sql_scripts?
  Tem que ter né, porque é lá que estarão nossos script que vamos
  rodar. Vamos conferir se tem mesmo então... Pra isso é só dar um ls
  no container.
  #+name docker verifica pasta sql_script 
  #+begin_src sh :dir /sudo::
    docker exec mssql-server ls
  #+end_src

  #+RESULTS:
  | bin         |
  | boot        |
  | dev         |
  | etc         |
  | home        |
  | install.sh  |
  | lib         |
  | lib64       |
  | media       |
  | mnt         |
  | opt         |
  | proc        |
  | root        |
  | run         |
  | sbin        |
  | *sql_scripts* |
  | srv         |
  | sys         |
  | tmp         |
  | usr         |
  | var         |
  
  Então pela saída acima tá comprovado que nossa pastinha de scripts
  tá... 


  Agora você pode dar uma conferida se a porta 1433 está aberta. Pra
  isso você pode usar o nmap.
  #+name checando porta 1433
  #+begin_src sh :dir /sudo::  :eval exports  :results output replace  :exports both
  nmap 172.17.0.1
  #+end_src

  #+RESULTS:
  #+begin_example

  Starting Nmap 7.40 ( https://nmap.org ) at 2017-07-13 22:26 -03
  Nmap scan report for 172.17.0.1
  Host is up (0.000011s latency).
  Not shown: 998 closed ports
  PORT     STATE    SERVICE
  111/tcp  open     rpcbind
  1433/tcp filtered ms-sql-s

  Nmap done: 1 IP address (1 host up) scanned in 1.30 seconds
#+end_example

* o comando sqlcmd

#+name sqlcmd
#+begin_src sh :dir /sudo:: :results output replace  :exports both
 docker exec mssql-server /opt/mssql-tools/bin/sqlcmd
#+end_src

#+RESULTS:
#+begin_example
Microsoft (R) SQL Server Command Line Tool
Version 13.1.0006.0 Linux
Copyright (c) 2012 Microsoft. All rights reserved.

usage: sqlcmd            [-U login id]          [-P password]
  [-S server or Dsn if -D is provided] 
  [-H hostname]          [-E trusted connection]
  [-N Encrypt Connection][-C Trust Server Certificate]
  [-d use database name] [-l login timeout]     [-t query timeout]
  [-h headers]           [-s colseparator]      [-w screen width]
  [-a packetsize]        [-e echo input]        [-I Enable Quoted Identifiers]
  [-c cmdend]
  [-q "cmdline query"]   [-Q "cmdline query" and exit]
  [-m errorlevel]        [-V severitylevel]     [-W remove trailing spaces]
  [-u unicode output]    [-r[0|1] msgs to stderr]
  [-i inputfile]         [-o outputfile]
  [-k[1|2] remove[replace] control characters]
  [-y variable length type display width]
  [-Y fixed length type display width]
  [-p[1] print statistics[colon format]]
  [-R use client regional setting]
  [-K application intent]
  [-M multisubnet failover]
  [-b On error batch abort]
  [-D Dsn flag, indicate -S is Dsn] 
  [-X[1] disable commands, startup script, environment variables [and exit]]
  [-x disable variable substitution]
  [-? show syntax summary]
#+end_example

* Rodando nossos sqls
** script1
*** Exec sp_database
    O script abaixo é o conteúdo do arquivo  script
    Exec_sp_databases.sql.  Seque o conteúdo do script. A gente vai
    passar esse script pro comando sqlcmd que vai executá-lo e mostrar
    o resultado logo abaixo.

    #+INCLUDE: "./sql_scripts/Exec_sp_databases.sql" src sql

    Como você pode perceber, o conteúdo do nosso script é simplesmente
    a execução da Store Procedure sp_databases. O resultado é igual o
    show databases do mysql, por exemplo.

    #+name sp_databases
    #+begin_src sh :dir /sudo:: :results output replace  :exports both
      docker exec mssql-server /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Aluno#123 -i /sql_scripts/Exec_sp_databases.sql
    #+end_src

    #+RESULTS:
    : DATABASE_NAME                                                                                                                    DATABASE_SIZE REMARKS                                                                                                                                                                                                                                                       
    : -------------------------------------------------------------------------------------------------------------------------------- ------------- --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    : master                                                                                                                                    6144 NULL                                                                                                                                                                                                                                                          
    : model                                                                                                                                    16384 NULL                                                                                                                                                                                                                                                          
    : msdb                                                                                                                                     14080 NULL                                                                                                                                                                                                                                                          
    : tempdb                                                                                                                                   16384 NULL                                                                                                                                                                                                                                                          


*** script1.sql
    #+INCLUDE: "./sql_scripts/script1.sql" src sql
    #+name funcoes
    #+begin_src sh :dir /sudo:: :results output replace  :exports both
      docker exec mssql-server /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Aluno#123 -i /sql_scripts/script1.sql
    #+end_src

    #+RESULTS:
    #+begin_example

    -----------
             28

    (1 rows affected)

    -----------
              6

    (1 rows affected)

    ------------------------------ ------------------------------
    Friday                         July                          

    (1 rows affected)

    ----------- ----------- -----------
             14           7        2017

    (1 rows affected)

    -----------------------
    2021-08-14 03:14:02.177

    (1 rows affected)

    -----------
              2

    (1 rows affected)
#+end_example

* Revisão de SQL - DML e DDL
* Sub-queries, inner join, outer join e self join
* DQL - Linguagem de Consulta de Dados:
** where
** have
** between
** order by
** in
** métodos
** getdate,
** operadores lógicos
** operadores relacionais e aritméticos
* tipos de dados
* funções
*** convert(),
*** str(float,
*** lenght,
*** decimal),
*** ascii(string),
*** char(integer), len(string),
*** lower(string),
*** upper(string),
*** replicate(string, integer),
*** space(no_espaço_em_branco)
*** right(string, no de caracteres à esquerda),
*** left (string, no de caracteres à direita),
*** ltrim(string),
*** rtrim
*** (string), substring(string
*** texto,
*** reverse(string), dateadd
*** round(número, precisão,arredondar ou truncar),
*** isnull(valor1, valor a ser retornado),
*** isnumeric(expressao),
*** case,
*** count,
*** avg(
***  [distinct |all] n), max(
    [distinct |all] n), min(
    [distinct |all] n), sum(
    [distinct |all] n)

* junções:  
** o associações internas
*** inner
*** join
*** (junções idênticas e não-idênticas);
** o associações externas
*** left outer join ou right
*** outer join, full outer join;
** associações cruzadas
*** cross join;
** auto-junção
* Comentários de uma linha e de várias linhas
* Estruturas básicas dos blocos SQL:
** apresentação dos blocos:
*** blocos anônimos,
*** procedures
*** functions e triggers
** instruções SQL dentro do bloco:
*** select, insert, update,delete
** estruturas de decisão:
*** apresentação das estruturas de decisão 
**** if-then-else
**** case
** estruturas de repetição:
*** apresentação das estruturas de repetição
**** loop
**** while
**** for
** exceções (tratamentos de erros):
*** apresentação das exceções pré-definidase exceções definidas pelo usuário
* Procedures:
** apresentação da sintaxe para criação de procedures e exemplos
* Functions: 
** apresentação da sintaxe para criação de funções e exemplos

* Triggers:  
** apresentação da sintaxe para criação de gatilhos e exemplos

* Views:
** apresentação da sintaxe para criação de visão controlada e limitada de dados e exemplos

* Índices:
** apresentação da sintaxe para criação índices;
*** índices clusterizados;
*** índices não clusterizados;
*** índice cluster misturado com
*** índice não cluster
* Merge - Introdução:
***  mesma base e diferentes base
* Acesso, regras, proprietáriose permissões



* referencias
  [fn:n1] https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-setup-docker#troubleshooting


