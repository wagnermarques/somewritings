#+Title: Bonitasoft notes
#+Subtitle:

* setup

  
   #+NAME: setup                    
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code
      export host=localhost
      export port=15961
      export ctx=bonita
      export restapi=http://$host:$port/$ctx
      echo $restapi
   #+END_SRC

   #+RESULTS: setup
   : 
   : [wagner@Unknown bonita]$ [wagner@Unknown bonita]$ [wagner@Unknown bonita]$ [wagner@Unknown bonita]$ [wagner@Unknown bonita]$ http://localhost:15961/bonita


* REST API
** Authentication
   https://documentation.bonitasoft.com/6.x-7.2/web-rest-api
   
   [[./imgs/restapi/bonitarestapi1.png]]

   
   #+NAME: curl post authentication             
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code
      curl -X POST -i http://$host:$port/$ctx/loginservice \ 
      --data 'username: wagner password: 123 redirect: false '
   #+END_SRC

   #+RESULTS: curl post authentication
   #+begin_example

   HTTP/1.1 200 
   [1mSet-Cookie[0m: JSESSIONID=4E01FF8178D726AF0ECBFBD5926F4F91; Path=/; HttpOnly
   [1mContent-Type[0m: text/html;charset=UTF-8
   [1mContent-Length[0m: 3281
   [1mDate[0m: Mon, 28 Oct 2019 14:08:37 GMT

   #+end_example

** Identity
*** (logando no Bonita) /bonita/loginservice form   
   #+NAME: curl post authentication (2)
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code
      echo http://$host:$port/$ctx/loginservice
      curl -v -c saved_cookies.txt -X POST --url 'http://localhost:15961/bonita/loginservice' --header 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' -O /dev/null -d 'username=wagner&password=123&redirect=false&redirectURL='
      #curl -X POST -i -H "application/x-www-form-urlencoded" http://$host:$port/$ctx/loginservice  --data "username=wagner&password=123&redirect=false"
   #+END_SRC

   #+RESULTS: curl post authentication (2)
   #+begin_example
   [1]+  Conclu√≠do              curl -b saved_cookies.txt -o cases.json -X POST --url http://localhost:15961/bonita/API/bpm/case?c=25
   http://://loginservice
   Note: Unnecessary use of -X or --request, POST is already inferred.
   Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                    Dload  Upload   Total   Spent    Left  Speed
     0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying ::1...
   ,* TCP_NODELAY set
   0)
   POST /bonita/loginservice HTTP/1.1
   Host: localhost:15961
   User-Agent: curl/7.61.1
   Accept: */*
   Content-Type: application/x-www-form-urlencoded; charset=utf-8
   Content-Length: 56
   } [56 bytes data]
   ,* upload completely sent off: 56 out of 56 bytes
   < HTTP/1.1 200 
   ,* Added cookie bonita.tenant="1" for domain localhost, path /bonita/, expire 0
   < Set-Cookie: bonita.tenant=1
   ,* Added cookie JSESSIONID="EFBD5A1AFF3CB37DEE68C0E6F75645C5" for domain localhost, path /, expire 0
   < Set-Cookie: JSESSIONID=EFBD5A1AFF3CB37DEE68C0E6F75645C5; Path=/; HttpOnly
   ,* Added cookie X-Bonita-API-Token="5c8ca8ca-dcce-4835-81d7-c91fae8f23d3" for domain localhost, path /, expire 0
   < Set-Cookie: X-Bonita-API-Token=5c8ca8ca-dcce-4835-81d7-c91fae8f23d3; Path=/
   < Content-Length: 0
   < Date: Tue, 29 Oct 2019 14:55:46 GMT
   < 
   100    56    0     0  100    56      0    296 --:--:-- --:--:-- --:--:--   296
   0 to host localhost left intact
   Note: Unnecessary use of -X or --request, POST is already inferred.
   malformed
   ,* Closing connection -1
   malformed
   #+end_example

   Para fazer logout, usar o comando abaixo
   
   #+NAME: logout                   
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code
      curl -b saved_cookies.txt -X GET --url 'http://localhost:15961/bonita/logoutservice?redirect=false'
   #+END_SRC


*** User,role,group,membership
   
    Listando usuarios cadastrados

   #+NAME: users.json
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code      
      #echo $restapi/API/identity/user
      #echo $(curl -i -H "Accept:application/json" -H "X-Bonita-API-Token: 211e4d53-16a7-4e04-bd82-e4c0d8237e93" --fail --silent --show-error $restapi/API/identity/group)
      curl -b saved_cookies.txt -o users.json -X GET http://localhost:15961/bonita/API/identity/user?p=0&c=10&o=lastname ASC&f=enabled=true
   #+END_SRC

   #+RESULTS: users.json
   : 
   : [wagner@Unknown bonita]$ [wagner@Unknown bonita]$ [1] 4509
   : [2] 4510
   : [3] 4511
   : [2]-  Conclu√≠do              c=10

   #+INCLUDE: users.json :src json


   Listando os grupos 
   
   #+NAME:  groups.json                   
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code
            curl -b saved_cookies.txt -o groups.json -X GET http://localhost:15961/bonita/API/identity/group?p=0&c=10&o=displayName ASC
   #+END_SRC

   #+RESULTS: groups.json
   : [1]-  Conclu√≠do              curl -b saved_cookies.txt -o users.json -X GET http://localhost:15961/bonita/API/identity/user?p=0
   : [3]+  Fim da execu√ß√£o com status 127        o=lastname ASC
   : [1] 4565
   : [2] 4566
   : bash: ASC: comando n√£o encontrado
   : [2]+  Conclu√≠do              c=10

      #+INCLUDE: groups.json :src json


   Listando roles

   #+NAME:  roles.json                   
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code
      curl -b saved_cookies.txt -o roles.json -X GET http://localhost:15961/bonita/API/identity/role?p=0&c=10&o=displayName ASC
   #+END_SRC

   #+RESULTS: roles.json
   : [1]+  Conclu√≠do              curl -b saved_cookies.txt -o groups.json -X GET http://localhost:15961/bonita/API/identity/group?p=0
   : [1] 4579
   : [2] 4580
   : bash: ASC: comando n√£o encontrado
   : [2]+  Conclu√≠do              c=10

   #+INCLUDE: roles.json :src json


   Listando memberships
   
   (Nao ta funcionando, complicacao com filter)
   
   #+NAME: memberships
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code
      curl -b saved_cookies.txt -o membership.json -X GET http://localhost:15961/bonita/API/identity/membership?f=user_id=303&f=id_role=306&f=id_group=303
   #+END_SRC

   #+RESULTS: memberships
   : [1]+  Conclu√≠do              curl -b saved_cookies.txt -o roles.json -X GET http://localhost:15961/bonita/API/identity/role?p=0
   : [1] 4611
   : [2] 4612

   #+INCLUDE: membership.json :src json


** Process
*** Listando os processos definidos/instalados

   #+NAME: list process definitions
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code      
      curl -b saved_cookies.txt -X GET --url http://localhost:15961/bonita/API/bpm/process?p=0
   #+END_SRC

   #+RESULTS: list process definitions

   #+INCLUDE: processInstaled.json :src json


*** Listando cases
   
   
   #+NAME: cases
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code
      #curl -b saved_cookies.txt -o cases.json -X POST --url http://localhost:15961/bonita/API/bpm/case?c=25&d=processDefinitionId&d=started_by&d=startedBySubstitute&f=user_id=303&n=activeFlowNodes&n=failedFlowNodes&p=0&s=
      #curl -b saved_cookies.txt -o cases.json -X POST --url  http://localhost:15961/bonita/API/bpm/case?c=25&d=processDefinitionId&d=started_by&d=startedBySubstitute&f=user_id%3D303&n=activeFlowNodes&n=failedFlowNodes&p=0&s=
      curl -b saved_cookies.txt -o cases.json -X POST --url   http://localhost:15961/bonita/API/bpm/case?c=25&d=processDefinitionId&d=started_by&d=startedBySubstitute&n=activeFlowNodes&n=failedFlowNodes&p=0&s=
   #+END_SRC

   #+RESULTS: cases
   #+begin_example

   [wagner@Unknown bonita]$ [wagner@Unknown bonita]$ [1] 7662
   [2] 7663
   [3] 7664
   [4] 7665
   [5] 7666
   [6] 7667
   [7] 7668
   [2]   Conclu√≠do              d=processDefinitionId
   [3]   Conclu√≠do              d=started_by
   [4]   Conclu√≠do              d=startedBySubstitute
   [6]-  Conclu√≠do              n=failedFlowNodes
   #+end_example
   

   #+INCLUDE: cases.json :src json

*** Instanciando um case/processo
   
    
   #+NAME: cat saved_cookies.txtxs    
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code
      cat saved_cookies.txt
   #+END_SRC

   #+RESULTS: cat saved_cookies.txtxs
   : [1]+  Conclu√≠do              curl -b saved_cookies.txt -o cases.json -X POST --url http://localhost:15961/bonita/API/bpm/case?c=25
   : # Netscape HTTP Cookie File
   : https://curl.haxx.se/docs/http-cookies.html
   : This file was generated by libcurl! Edit at your own risk.
   : 
   : localhost	FALSE	/	FALSE	0	X-Bonita-API-Token	5c8ca8ca-dcce-4835-81d7-c91fae8f23d3
   : HttpOnly_localhost	FALSE	/	FALSE	0	JSESSIONID	EFBD5A1AFF3CB37DEE68C0E6F75645C5
   : localhost	FALSE	/bonita/	FALSE	0	bonita.tenant	1

   #+NAME:  instanciando um processo                   
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code
      curl -b saved_cookies.txt -X POST --url 'http://localhost:15961/bonita/API/bpm/case' --header 'Content-Type: application/json'  --header 'X-Bonita-API-Token: 5c8ca8ca-dcce-4835-81d7-c91fae8f23d3' -d '{"processDefinitionId":"5268062146612458577"}'
   #+END_SRC

   #+RESULTS: instanciando um processo


   
** Taks
   

** (Gerenciando Atores no processo) Como funciona a questao dos atores num processo
*** ActorMember
     https://documentation.bonitasoft.com/bonita/7.6/bpm-api
     Um ator representa uma associaÁ„o entre ele e uma organization em
     um processo.
     Essa associaÁ„o podem ser classificadas como:
     member_types = USER, GROUP, ROLE and MEMBERSHIP (role in a group). 
     
     E possivel associar um ator a um usuario especificando um role
     e/ou um grupo ou mesmo um usuario especifico.

     Vamos pesquisar os atores de um processo

     Se È de um processo, vc tem que dizer qual
     Pra fazer isso 5268062146612458577

     problema: {"exception":"class org.bonitasoft.web.rest.server.framework.exception.APIFilterMandatoryException","message":"Filter process_id is mandatory","api":"bpm","resource":"actor","filterName":"process_id"}
   #+NAME: serach actor in process                     
   #+BEGIN_SRC shell :session s1 :results output :exports both
      #starts code
      curl -b saved_cookies.txt -o actorsInProcess.json -X GET --url http://localhost:15961/bonita/API/bpm/actor?p=0&c=10&f=process_id=5268062146612458577&n=users&n=group&n=roles&n=memberships
   #+END_SRC

   #+RESULTS: serach actor in process
   #+begin_example

   [1] 6878
   [2] 6879
   [3] 6880
   [4] 6881
   [5] 6882
   [6] 6883
   [2]   Conclu√≠do              c=10
   [3]   Conclu√≠do              f=process_id=5268062146612458577
   [4]   Conclu√≠do              n=users
   #+end_example


* Anots
** Form
** {{taks}} object properties
   
   #+BEGIN_SRC javascript
     {
     "displayDescription":"",
     "executedBy":"0",
     "rootContainerId":"9001",
     "assigned_date":"",
     "displayName":"FormWeb",
     "executedBySubstitute":"0",
     "dueDate":"",
     "description":"",
     "type":"USER_TASK",
     "priority":"normal",
     "actorId":"1102",
     "processId":"5474128313932438158",
     "caseId":"9001",
     "name":"FormWeb",
     "reached_state_date":"2019-10-18 10:23:12.175",
     "rootCaseId":"9001",
     "id":"140006",
     "state":"ready",
     "parentCaseId":"9001",
     "last_update_date":"2019-10-18 10:23:12.175",
     "assigned_id":""}
   #+END_SRC
** anotacores sobre o curl
   from man curl:
    -i, --include
              Include the HTTP response headers in the output. The HTTP response headers can include things like server name, cookies, date of the document,  HTTP
              version and more...

              To view the request headers, consider the -v, --verbose option.

              See also -v, --verbose.
